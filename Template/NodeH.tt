<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Google.Protobuf.Reflection" #>
//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "CoreMinimal.h"
#include "Kismet/BlueprintAsyncActionBase.h"
#include "TurboLinkGrpcClient.h"
#include "<#=s.CamelFileName#>Message.h"
<#
if(s.GetTotalPingPongMethodCounts()>0) {
#>
#include "<#=s.CamelFileName#>Node.generated.h"
<#
}
#>

<#
foreach(GrpcService service in s.ServiceArray)
{
	int pingPongMethodCounts=0;
	foreach (GrpcServiceMethod method in service.MethodArray) {
		if(!method.ClientStreaming && !method.ServerStreaming) pingPongMethodCounts++;
	}
	if(pingPongMethodCounts==0) continue;
#>
class U<#=service.Name#>;
class U<#=service.Name#>Client;
<#
foreach (GrpcServiceMethod method in service.MethodArray)
{
	if(!method.ClientStreaming) {
#>

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCall<#=service.Name#><#=method.Name#> : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(F<#=service.Name#><#=method.Name#>Delegate, const FGrpcResult&, GrpcResult, const <#=method.OutputType#>&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call <#=service.Name#> <#=method.Name#>"), Category = "TurboLink|<#=service.Name#>")
	static UCall<#=service.Name#><#=method.Name#>* <#=method.Name#>(UObject* WorldContextObject, const <#=method.InputType#>& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	F<#=service.Name#><#=method.Name#>Delegate On<#=method.Name#>Response;

<#if(method.ServerStreaming) {#>
	UPROPERTY(BlueprintAssignable)
	F<#=service.Name#><#=method.Name#>Delegate OnFinished;

<#}#>
	UPROPERTY(BlueprintAssignable)
	F<#=service.Name#><#=method.Name#>Delegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<U<#=service.Name#>> <#=service.Name#>;
	
	UPROPERTY()
	TObjectPtr<U<#=service.Name#>Client> <#=service.Name#>Client;
	
	FGrpcContextHandle Context;
	<#=method.InputType#> Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const <#=method.OutputType#>& Response);

	void Shutdown();
};
<#
	}
}
}
#>
