// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace protoc_gen_turbolink.Template
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Google.Protobuf.Reflection;
    using System.Globalization;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class MessageH : MessageHBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("//Generated by TurboLink CodeGenerator, do not edit!\r\n#pragma once\r\n#include \"TurboLinkGrpcMessage.h\"\r\n");
            
            #line 11 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"

foreach (string dependency in s.DependencyFiles)
{

            
            #line default
            #line hidden
            this.Write("#include \"");
            
            #line 15 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dependency));
            
            #line default
            #line hidden
            this.Write("Message.h\"\r\n");
            
            #line 16 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}
            
            #line default
            #line hidden
            
            #line 17 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
if(s.EnumArray.Count>0 || s.MessageArray.Count>0) {
            
            #line default
            #line hidden
            
            #line 18 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
if(s.NeedBlueprintFunctionLibrary()) {
            
            #line default
            #line hidden
            this.Write("#include \"Kismet/BlueprintFunctionLibrary.h\"\r\n");
            
            #line 20 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}
            
            #line default
            #line hidden
            this.Write("#include \"");
            
            #line 21 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(s.CamelFileName));
            
            #line default
            #line hidden
            this.Write("Message.generated.h\"\r\n");
            
            #line 22 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}
            
            #line default
            #line hidden
            
            #line 23 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"

foreach (GrpcEnum enumDefine in s.EnumArray)
{

            
            #line default
            #line hidden
            this.Write("\r\nUENUM(BlueprintType, meta = (DisplayName=\"");
            
            #line 28 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumDefine.DisplayName));
            
            #line default
            #line hidden
            this.Write("\", ScriptName=\"");
            
            #line 28 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumDefine.Name));
            
            #line default
            #line hidden
            this.Write("\"))\r\nenum class ");
            
            #line 29 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumDefine.Name));
            
            #line default
            #line hidden
            this.Write(" : uint8\r\n{\r\n");
            
            #line 31 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
if(enumDefine.MissingZeroField) {
            
            #line default
            #line hidden
            this.Write("    _ZERO_RESERVED_FIELD_=0 UMETA(Hidden),\r\n");
            
            #line 33 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}
            
            #line default
            #line hidden
            
            #line 34 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"

foreach (GrpcEnumField enumField in enumDefine.Fields)
{

            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 38 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumField.Name));
            
            #line default
            #line hidden
            this.Write("=");
            
            #line 38 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumField.Number));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 39 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}
            
            #line default
            #line hidden
            this.Write("};\r\n");
            
            #line 41 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}
            
            #line default
            #line hidden
            
            #line 42 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
 
foreach(GrpcMessage message in s.MessageArray)
{
if(message.HasNativeMake || message is GrpcMessage_Oneof)
{

            
            #line default
            #line hidden
            this.Write("\r\nUSTRUCT(BlueprintType, meta = (DisplayName=\"");
            
            #line 49 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.DisplayName));
            
            #line default
            #line hidden
            this.Write("\",\r\n    HasNativeMake = \"TurboLinkGrpc.");
            
            #line 50 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.Substring(1)));
            
            #line default
            #line hidden
            this.Write("HelperLibrary.Make");
            
            #line 50 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.CamelName));
            
            #line default
            #line hidden
            this.Write("\",\r\n    HasNativeBreak = \"TurboLinkGrpc.");
            
            #line 51 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.Substring(1)));
            
            #line default
            #line hidden
            this.Write("HelperLibrary.Break");
            
            #line 51 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.CamelName));
            
            #line default
            #line hidden
            this.Write("\"))\r\n");
            
            #line 52 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
} else {
            
            #line default
            #line hidden
            this.Write("\r\nUSTRUCT(BlueprintType, meta = (DisplayName=\"");
            
            #line 54 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.DisplayName));
            
            #line default
            #line hidden
            this.Write("\"))\r\n");
            
            #line 55 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}
            
            #line default
            #line hidden
            this.Write("struct ");
            
            #line 56 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write(" : public FGrpcMessage\r\n{\r\n    GENERATED_BODY()\r\n");
            
            #line 59 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"

if(g.GenerateJsonCode && !(message is GrpcMessage_Oneof)) {

            
            #line default
            #line hidden
            this.Write("    DECLARE_JSON_FUNCTIONS()\r\n");
            
            #line 63 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}
            
            #line default
            #line hidden
            
            #line 64 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"

if(message is GrpcMessage_Oneof) {
GrpcMessage_Oneof oneofMessage = (GrpcMessage_Oneof)message;

            
            #line default
            #line hidden
            this.Write("\r\n    UPROPERTY(BlueprintReadWrite, Category = TurboLink)\r\n    ");
            
            #line 70 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneofMessage.OneofEnum.Name));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 70 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneofMessage.CamelName));
            
            #line default
            #line hidden
            this.Write("Case;\r\n");
            
            #line 71 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}
            
            #line default
            #line hidden
            
            #line 72 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"

foreach(GrpcMessageField field in message.Fields)
{
if(field.NeedNativeMake)
{

            
            #line default
            #line hidden
            this.Write("\r\n    ");
            
            #line 79 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.TypeAsNativeField));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 79 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 80 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}else{
            
            #line default
            #line hidden
            this.Write("\r\n    UPROPERTY(BlueprintReadWrite, Category = TurboLink)\r\n    ");
            
            #line 83 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 83 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldName));
            
            #line default
            #line hidden
            
            #line 83 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldDefaultValue));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 84 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}}
            
            #line default
            #line hidden
            this.Write("};\r\n");
            
            #line 86 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}
            
            #line default
            #line hidden
            
            #line 87 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
 
foreach(GrpcMessage message in s.MessageArray)
{
if(message.HasNativeMake || message is GrpcMessage_Oneof)
{

            
            #line default
            #line hidden
            this.Write("\r\nUCLASS()\r\nclass U");
            
            #line 95 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.Substring(1)));
            
            #line default
            #line hidden
            this.Write("HelperLibrary : public UBlueprintFunctionLibrary\r\n{\r\n    GENERATED_BODY()\r\npublic:\r\n    UFUNCTION(BlueprintPure, Category = \"TurboLink|");
            
            #line 99 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(s.CamelPackageName));
            
            #line default
            #line hidden
            this.Write("\", meta=(BlueprintThreadSafe))\r\n    static ");
            
            #line 100 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write(" Make");
            
            #line 100 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.CamelName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 100 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
if(message is GrpcMessage_Oneof){ GrpcMessage_Oneof oneofMessage = (GrpcMessage_Oneof)message; 
            
            #line default
            #line hidden
            
            #line 100 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneofMessage.OneofEnum.Name));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 100 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneofMessage.CamelName));
            
            #line default
            #line hidden
            this.Write("Case, \r\n");
            
            #line 101 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}else{
            
            #line default
            #line hidden
            this.Write(" \r\n");
            
            #line 102 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}
            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 102 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"

for(int index=0; index<message.Fields.Count; index++){
GrpcMessageField field = message.Fields[index];

            
            #line default
            #line hidden
            
            #line 105 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 105 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldName));
            
            #line default
            #line hidden
            
            #line 105 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"

if(index==(message.Fields.Count-1)){
            
            #line default
            #line hidden
            this.Write(" \r\n    ");
            
            #line 107 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}else if((index+1)%3==0){
            
            #line default
            #line hidden
            this.Write(", \r\n        ");
            
            #line 108 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}else{
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 108 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}}
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n    UFUNCTION(BlueprintPure, Category = \"TurboLink|");
            
            #line 111 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(s.CamelPackageName));
            
            #line default
            #line hidden
            this.Write("\", meta=(BlueprintThreadSafe))\r\n    static void Break");
            
            #line 112 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.CamelName));
            
            #line default
            #line hidden
            this.Write("(const ");
            
            #line 112 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write("& ");
            
            #line 112 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.CamelName));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 112 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
if(message is GrpcMessage_Oneof){ GrpcMessage_Oneof oneofMessage = (GrpcMessage_Oneof)message; 
            
            #line default
            #line hidden
            
            #line 112 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneofMessage.OneofEnum.Name));
            
            #line default
            #line hidden
            this.Write("& ");
            
            #line 112 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(oneofMessage.CamelName));
            
            #line default
            #line hidden
            this.Write("Case, \r\n");
            
            #line 113 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}else{
            
            #line default
            #line hidden
            this.Write(" \r\n");
            
            #line 114 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}
            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 114 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"

for(int index=0; index<message.Fields.Count; index++){
GrpcMessageField field = message.Fields[index];

            
            #line default
            #line hidden
            
            #line 117 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldType));
            
            #line default
            #line hidden
            this.Write("& ");
            
            #line 117 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldName));
            
            #line default
            #line hidden
            
            #line 117 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"

if(index==(message.Fields.Count-1)){
            
            #line default
            #line hidden
            this.Write(" \r\n    ");
            
            #line 119 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}else if((index+1)%3==0){
            
            #line default
            #line hidden
            this.Write(", \r\n        ");
            
            #line 120 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}else{
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 120 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}}
            
            #line default
            #line hidden
            this.Write(");\r\n};\r\n");
            
            #line 123 "Z:\wilsimpson\protoc-gen-turbolink\Template\MessageH.tt"
}}
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class MessageHBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
